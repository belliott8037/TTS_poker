function onLoad()
    self.shuffle()
end

function deal(deal_params)
    -- deal_params = {dealer, betting_zone_color, betting_zone_GUID}
    self.use_hands = true
    local player_order = {}
    local timer = 0
    local j = 1
    dealer = deal_params[1] -- dealer = zone where token is
    -- betting_zone_color = deal_params[2] -- table holding colors
    -- betting_zone_GUID = deal_params[3] -- keys to table w/ color's zone
    --print(betting_zone_color[betting_zone_GUID[n]])

    -- get refreshed list of seated players or maybe should pull in from args?
    --local player_colors = getSeatedPlayers()
    -- TODO test to see if order is consistent
    local player_colors = {"White", "Red", "Yellow", "Pink"}
    -- get dealer spot/index this needs to get fixed.
    for i in ipairs(player_colors) do
        if dealer == player_colors[i] then
            dealer_index = i
            break
        end
    end
    local max = dealer_index + #player_colors
    -- build correct dealing order
    for i = dealer_index, max do
        index = i % #player_colors + 1
        if index == dealer_index then
            player_order[j] = player_colors[index]
            break
        else
            player_order[j] = player_colors[index]
            j = j + 1
        end
    end
    for i in ipairs(player_order) do
        Wait.time(function() deal_one(player_order[i]) end, timer)
        timer = timer + 0.5
    end
end
function deal_one(player_color)
    self.deal(1,player_color)
end
 function flop()
     -- call kill
    kill()
    -- place top 3 cards in the correct positions and flip them.
    print("Flippy Floppy")
 end
--
-- function turn()
--     -- call kill
--
--     -- place top card in the correct position and flip it.
-- end
--
-- function river()
--     -- call kill
--
--     -- place top card in the correct position and flip it.
-- end
--
function kill()
    print("Kill function")
    -- place the top card of the deck into the discard pile
    -- first find location of discard pile.
    -- maybe make a zone and place card in zone??
    -- position = self.positionToWorld()
    -- for i in position do
    --     print(position[i])
    -- end
end